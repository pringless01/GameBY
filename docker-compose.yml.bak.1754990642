services:
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
  restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET}
      - CURSOR_SECRET=${CURSOR_SECRET}
      - CURSOR_SECRET_ROTATION=${CURSOR_SECRET_ROTATION}
      - DB_PATH=/data/game.db
      - ALLOWED_ORIGINS=*
    volumes:
      - api-data:/data
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 6
  nginx:
    image: nginx:stable-alpine
    depends_on:
      api:
        condition: service_healthy
  restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot-webroot:/var/www/certbot
    environment:
      - BASIC_AUTH_USER=${BASIC_AUTH_USER}
      - BASIC_AUTH_PASS=${BASIC_AUTH_PASS}
  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot-webroot:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
    entrypoint: ["/bin/sh","-c"]
    # İlk sertifika alma için örnek (çalıştırırken alan adını ve maili değiştirin):
    command: "echo 'Use: docker compose run --rm certbot certonly --webroot -w /var/www/certbot -d YOUR_DOMAIN -m YOUR_EMAIL --agree-tos --no-eff-email'"
volumes:
  api-data:
  certbot-webroot:
  certbot-etc:
