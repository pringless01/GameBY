services:
  api:
    build:
      context: ../
      dockerfile: apps/api/Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      JWT_SECRET: ${JWT_SECRET}
      CURSOR_SECRET: ${CURSOR_SECRET}
      CURSOR_SECRET_ROTATION: ${CURSOR_SECRET_ROTATION}
      CORS_ORIGIN: ${CORS_ORIGIN}
      DB_PATH: /data/game.db
      REFRESH_SECRET: ${REFRESH_SECRET:-default-refresh-secret-change-in-production}
    volumes:
      - api-data:/data
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 6
  nginx:
    image: nginx:stable-alpine
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../apps/web/public:/usr/share/nginx/html:ro
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/health"]
      interval: 10s
      timeout: 3s
      retries: 6
    environment:
      BASIC_AUTH_USER: ${BASIC_AUTH_USER}
      BASIC_AUTH_PASS: ${BASIC_AUTH_PASS}
volumes:
  api-data:
