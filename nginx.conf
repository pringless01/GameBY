worker_processes auto;
events { worker_connections 1024; }
http {
  server_tokens off;
  # gzip compression
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
  # Docker’ın dahili DNS’i (service name resolution)
  resolver 127.0.0.11 ipv6=off valid=30s;

  # Upstream tanımı: api servisi 3000 portu
  upstream api_upstream {
    server api:3000;
  }
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  # Rate limiting (apply to /api only)
  limit_req_zone $binary_remote_addr zone=api_ratelimit:10m rate=10r/s;
  # WebSocket rate limit zone (server bloğu yerine http seviyesinde olmalı)
  limit_req_zone $binary_remote_addr zone=ws_ratelimit:1m rate=5r/s;

  server {
    listen 80;
    listen [::]:80;
    server_name tcrtsmlatronline.app www.tcrtsmlatronline.app;
    # ACME HTTP-01 challenge
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
      try_files $uri =404;
    }
    # (TEMP) Sertifika alınana kadar HTTP->HTTPS redirect devre dışı
    # if ($host ~* ^(tcrtsmlatronline\.app|www\.tcrtsmlatronline\.app)$) { return 301 https://$host$request_uri; }
    
    # Backend healthcheck (proxy to api)
    location = /health {
      proxy_pass http://api_upstream/health;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Admin panel (ana domain altından erişim istenirse)
    location /admin/ {
      root /usr/share/nginx/html-admin;
      index login.html;
      try_files $uri $uri/ /admin/login.html /login.html =404;
      add_header Cache-Control "no-store";
    }
    location /api/admin/ {
      proxy_pass http://api_upstream/api/admin/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      add_header Cache-Control "no-store";
    }
    
    # API routes - proxy to backend
    location /api/ {
      limit_req zone=api_ratelimit burst=30 nodelay;
      proxy_pass http://api_upstream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
  # Socket.io (WebSocket) istekleri (ws_ratelimit zonu http seviyesinde tanımlandı)
  # Socket.io routes  
    location /socket.io/ {
      limit_req zone=ws_ratelimit burst=20 nodelay;
      proxy_pass http://api_upstream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
  # Frontend static files
    location / {
      root /usr/share/nginx/html;
      index index.html;
      try_files $uri $uri/ /index.html;
      
      # Security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Cross-Origin-Opener-Policy "same-origin" always;
  add_header Cross-Origin-Embedder-Policy "require-corp" always;
  add_header Cross-Origin-Resource-Policy "same-origin" always;
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' ws: wss:; frame-ancestors 'self';" always;
      
      # Do not cache HTML files (ensure fresh index/app)
      location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
      }

      # Geliştirme sürecinde kritik JS dosyalarını kısa süre cache'le
      location ~* /(js/core\.js|js/auth-client\.js)$ {
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        expires -1;
      }

      # Cache static asset files aggressively
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
    }
  }

  # Admin alt domaini için ayrı server bloğu
  server {
    listen 80;
    listen [::]:80;
    server_name admin.tcrtsmlatronline.app;

    # Admin paneli (statik login + app) ve admin API proxy
    location = /health { return 200 'ok'; add_header Content-Type text/plain; }

    # Statik admin kökü (login.html vb). Geçici olarak aynı frontend volume kullanılıyor.
    location / {
      root /usr/share/nginx/html-admin;
      index login.html;
      try_files $uri $uri/ /login.html;
      add_header Cache-Control "no-store";
    }

    # Admin backend API artık ana api servisine yönleniyor
    location /api/admin/ {
      proxy_pass http://api_upstream/api/admin/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      add_header Cache-Control "no-store";
    }
    # Admin core yeni sistem JWT tabanlı
    location /api/admin-core/ {
      proxy_pass http://api_upstream/api/admin-core/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      add_header Cache-Control "no-store";
    }
  }

  # Canonical redirect: www -> apex
  # HTTPS server block (sertifika alındıktan sonra tekrar eklenecek)
  # --- BEGIN SSL BLOCK PLACEHOLDER ---
  # (Geçici olarak kaldırıldı)
  # --- END SSL BLOCK PLACEHOLDER ---
}
